Hi [Recipient's Name],

I wanted to share the steps I've taken to debug the issue we've been facing with file uploads:

1. Testing NAS Mount Throughput
In the first step, I focused on the NAS mount's read and write throughput:

Write Test: I copied large files from the local disk to the NAS mount and also generated large files directly on the NAS mount.
Observation: Both operations performed as expected, with no noticeable delays, confirming that the NAS mount is functioning properly.
2. Creating a Flask File Upload Service
Next, I developed a simple Flask file upload service:

Configuration: This service was configured to upload files directly to the NAS mount, running on uWSGI and NGINX with configurations that mirror our production environment.
Test Results: Large files were uploaded within 20 to 30 seconds, which is consistent with our expectations. This indicates that the service and underlying infrastructure are performing well under similar conditions to production.
3. Testing During the Upgrade
During today’s upgrade, while the UI services were down, I proceeded to the next step:

DNS/LBaaS Testing: I pointed the DNS and LBaaS to the Flask file upload service and tested the upload process with large files.
Test 1: LBaaS without DNS – the upload took significantly longer than expected.
Test 2: DNS and LBaaS combined – again, the upload took around 45 minutes.
Observation: This suggests that the delay is linked to LBaaS. I reviewed the LBaaS configuration and found it to be identical to LLE's. However, without access to the logs, I'm unable to dig deeper at this point.
Next Steps:
I'll be coordinating with the LBaaS team on Tuesday to investigate this further and identify the root cause.

Please let me know if you have any additional insights or need more information.

