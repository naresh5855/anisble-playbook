import ssl
import socket

def verify_certificate(hostname, port=443, ca_bundle_path=None):
    context = ssl.create_default_context()

    if ca_bundle_path:
        context.load_verify_locations(cafile=ca_bundle_path)

    with socket.create_connection((hostname, port)) as sock:
        with context.wrap_socket(sock, server_hostname=hostname) as ssock:
            cert = ssock.getpeercert()
            print("Certificate Details:")
            print(cert)

            if not cert:
                raise Exception("No certificate received")

            try:
                ssl.match_hostname(cert, hostname)
                print("Certificate is valid.")
            except ssl.CertificateError as e:
                print(f"Certificate verification failed: {e}")

if __name__ == "__main__":
    hostname = "www.example.com"  # Replace with your hostname
    ca_bundle_path = "/path/to/your/ca-bundle.crt"  # Replace with the path to your CA bundle if needed
    verify_certificate(hostname, ca_bundle_path=ca_bundle_path)
