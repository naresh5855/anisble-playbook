#!/bin/bash

##############################################
# GCP-SYS-WORKFLOWS Service Monitoring Script
##############################################

# Set Vars
recipients="dg.gcp_em_team@bofa.com"
directory="/gcp/autosys/autosys_out"
log_lines="{{ log_count }}"
sleep_secs="{{ sleep_secs }}"
export smtp="{{ smtp_name }}"
export smtpport=25
boxname=$(hostname)
ice_bool="{{ ice_bool }}"

deployment_lock="/path/to/deployment.lock"
startup_lock="/apps/gcp_sys_workflows/latest/logs/gcp_sys_workflows-startup.lock"

log_info="$directory/wf-restart-$(date +%Y-%m-%d_%H:%M:%S).log"

if [ "$ice_bool" = "NO" ]; then
  # Set Environment lanes
  for env in {{ gra_env_lanes }}; do
    # Check to see if lanes are down
    send_mail="false"
    check_gcp_workflows1=$(ps -ef | grep -i uwsgi | grep $env | egrep 'master|Emperor|worker' | egrep -v worker | egrep -v start | wc -l)
    if [ $check_gcp_workflows1 -lt 2 ]; then
      # Log current status
      echo "[$(date)] Detected potential issue with $env: $check_gcp_workflows1 processes found." >> $log_info
      # Check to see if lane is down for at least 60 seconds
      sleep $sleep_secs
      check_gcp_workflows2=$(ps -ef | grep -i uwsgi | grep $env | egrep 'master|Emperor|worker' | egrep -v worker | egrep -v start | wc -l)
      if [ $check_gcp_workflows2 -lt 2 ]; then
        # Log current status
        echo "[$(date)] Confirmed issue with $env: $check_gcp_workflows2 processes found after $sleep_secs seconds." >> $log_info
        if [[ ! -f $deployment_lock && ! -f $startup_lock ]]; then
          # Perform restart
          echo "[$(date)] No deployment or startup lock found. Restarting $env." >> $log_info
          cd /gcp/bin
          ./start-gcp-sys-workflows.sh --env=$env
          send_mail="true"
        else
          echo "[$(date)] Deployment or startup in progress. Exiting to avoid conflict." >> $log_info
        fi
      else
        echo "[$(date)] Issue with $env resolved itself: $check_gcp_workflows2 processes found after $sleep_secs seconds." >> $log_info
      fi
    fi

    if [ "$send_mail" = "true" ]; then
      # Check if directory exists
      if [ ! -d "$directory" ]; then
        mkdir -p "$directory"
      fi

      # Email is sent with last "n" number of log lines
      log_info="$directory/wf-restart-$(date +%Y-%m-%d_%H:%M:%S).log"
      touch $log_info
      echo -e "Workflows might be down, AutoSys is attempting a restart\n" >> $log_info
      tail -n $log_lines /gcp/$env/apps/gcp_sys_workflows/latest/logs/gcp_sys_workflows-$(date +%Y-%m-%d).log >> $log_info
      mail -s "GCP EM STATUS REPORT -- WF RESTART FOR $env ON $boxname" -r "{{ service_id }}@bofa.com" $recipients < $log_info
      rm $log_info
    fi

  done
else
  echo "JOB ON ICE"
fi
